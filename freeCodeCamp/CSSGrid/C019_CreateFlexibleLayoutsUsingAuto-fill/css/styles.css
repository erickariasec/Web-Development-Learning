.item1{background:LightSkyBlue;}
.item2{background:LightSalmon;}
.item3{background:PaleTurquoise;}
.item4{background:LightPink;}
.item5{background:PaleGreen;}

.container {
    font-size: 40px;
    min-height: 100px;
    width: 100%;
    background: LightGray;
    display: grid;
    /* Cambia solo el código debajo de esta línea */

    grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));

    /* Cambia solo el código encima de esta línea */
    grid-template-rows: 1fr 1fr 1fr;
    grid-gap: 10px;
}

.container2 {
    font-size: 40px;
    min-height: 100px;
    width: 100%;
    background: Silver;
    display: grid;
    grid-template-columns: repeat(3, minmax(60px, 1fr));
    grid-template-rows: 1fr 1fr 1fr;
    grid-gap: 10px;
}

/*
    The repeat feature comes with an option called auto-fill.
    This allows you to automatically insert as many rows or columns of the desired size as possible, depending on the size of the container.
    You can create flexible layouts by combining auto-fill with minmax, like this:

    repeat(auto-fill, minmax(60px, 1fr));

    When the size of the container changes, this setting keeps inserting 60px columns and stretching them until it can insert another one.
    Note: If your container doesn't fit all the items in a row, it will move them down to a new row.

    On the first grid, use auto-fill with repeat to fill the grid with columns that have a minimum width of 60px and a maximum width of 1fr.
    Then resize the preview to see auto-fill in action.
*/
