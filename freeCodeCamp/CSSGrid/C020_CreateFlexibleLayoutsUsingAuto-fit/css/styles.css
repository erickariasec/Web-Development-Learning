.item1{background:LightSkyBlue;}
.item2{background:LightSalmon;}
.item3{background:PaleTurquoise;}
.item4{background:LightPink;}
.item5{background:PaleGreen;}

.container {
    font-size: 40px;
    min-height: 100px;
    width: 100%;
    background: LightGray;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
    grid-template-rows: 1fr 1fr 1fr;
    grid-gap: 10px;
}

.container2 {
    font-size: 40px;
    min-height: 100px;
    width: 100%;
    background: Silver;
    display: grid;
    /* Cambia solo el código debajo de esta línea */

    grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));

    /* Cambia solo el código encima de esta línea */
    grid-template-rows: 1fr 1fr 1fr;
    grid-gap: 10px;
}

/*
    auto-fit works almost the same as auto-fill.
    The only difference is that when the size of the container exceeds the size of all its elements combined,
    auto-fill keeps inserting empty rows or columns and pushes the elements to the side,
    while auto-fit collapses those rows or columns and stretches the elements to cover the size of the container.

    Note: If your container doesn't fit all the items in a row, it will move them down to a new row.

    On the second grid, use auto-fit with repeat to fill the grid with columns that have a minimum width of 60px and a maximum width of 1fr.
    Then resize the preview to see the difference.
*/
