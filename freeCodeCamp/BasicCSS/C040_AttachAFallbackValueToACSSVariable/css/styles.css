.penguin {
    --penguin-skin: black;      /* CSS Variable */
    --penguin-belly: gray;      /* CSS Variable */
    --penguin-beak: yellow;     /* CSS Variable */
    position: relative;
    margin: auto;
    display: block;
    margin-top: 5%;
    width: 300px;
    height: 300px;
}

/*
    When using your variable as the value of a CSS property, you can attach a "fallback" value, which will be used by the browser if the given variable is invalid.

    Note: This fallback value is not used to increase compatibility with other browser versions and will not work in IE (Internet Explorer) browsers.
    Rather, it is used so that the browser has a color to display if it doesn't find your variable.

    Here we show you how to do it:
    background: var(--penguin-skin, black);

    This will set the "background" to black if your variable is not set.
    Note that this can be useful for debugging.

    There seems to be a problem with the variables supplied to the .penguin-top and .penguin-bottom classes.
    Instead of correcting the typo, add black as a "fallback" value to the background property of the .penguin-top and .penguin-bottom classes.
*/

.penguin-top {
    top: 10%;
    left: 25%;
    /* Cambia el código debajo de esta línea */
    background: var(--pengiun-skin, black);
    /* Cambia el código encima de esta línea */
    width: 50%;
    height: 45%;
    border-radius: 70% 70% 60% 60%;
}

.penguin-bottom {
    top: 40%;
    left: 23.5%;
    /* Cambia el código debajo de esta línea */
    background: var(--pengiun-skin, black);
    /* Cambia el código encima de esta línea */
    width: 53%;
    height: 45%;
    border-radius: 70% 70% 100% 100%;
}

.right-hand {
    top: 0%;
    left: -5%;
    background: var(--penguin-skin, black);
    width: 30%;
    height: 60%;
    border-radius: 30% 30% 120% 30%;
    transform: rotate(45deg);
    z-index: -1;
}

.left-hand {
    top: 0%;
    left: 75%;
    background: var(--penguin-skin, black);
    width: 30%;
    height: 60%;
    border-radius: 30% 30% 30% 120%;
    transform: rotate(-45deg);
    z-index: -1;
}

.right-cheek {
    top: 15%;
    left: 35%;
    background: var(--penguin-belly, white);
    width: 60%;
    height: 70%;
    border-radius: 70% 70% 60% 60%;
}

.left-cheek {
    top: 15%;
    left: 5%;
    background: var(--penguin-belly, white);
    width: 60%;
    height: 70%;
    border-radius: 70% 70% 60% 60%;
}

.belly {
    top: 60%;
    left: 2.5%;
    background: var(--penguin-belly, white);
    width: 95%;
    height: 100%;
    border-radius: 120% 120% 100% 100%;
}

.right-feet {
    top: 85%;
    left: 60%;
    background: var(--penguin-beak, orange);
    width: 15%;
    height: 30%;
    border-radius: 50% 50% 50% 50%;
    transform: rotate(-80deg);
    z-index: -2222;
}

.left-feet {
    top: 85%;
    left: 25%;
    background: var(--penguin-beak, orange);
    width: 15%;
    height: 30%;
    border-radius: 50% 50% 50% 50%;
    transform: rotate(80deg);
    z-index: -2222;
}

.right-eye {
    top: 45%;
    left: 60%;
    background: black;
    width: 15%;
    height: 17%;
    border-radius: 50%;
}

.left-eye {
    top: 45%;
    left: 25%;
    background: black;
    width: 15%;
    height: 17%;
    border-radius: 50%;
}

.sparkle {
    top: 25%;
    left: 15%;
    background: white;
    width: 35%;
    height: 35%;
    border-radius: 50%;
}

.blush-right {
    top: 65%;
    left: 15%;
    background: pink;
    width: 15%;
    height: 10%;
    border-radius: 50%;
}

.blush-left {
    top: 65%;
    left: 70%;
    background: pink;
    width: 15%;
    height: 10%;
    border-radius: 50%;
}

.beak-top {
    top: 60%;
    left: 40%;
    background: var(--penguin-beak, orange);
    width: 20%;
    height: 10%;
    border-radius: 50%;
}

.beak-bottom {
    top: 65%;
    left: 42%;
    background: var(--penguin-beak, orange);
    width: 16%;
    height: 10%;
    border-radius: 50%;
}

body {
    background:#c6faf1;
}

.penguin * {
    position: absolute;
}
